------------------------------------------------>1
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
Computing results starting from observation (a-posteriori)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 1)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 546.5518
Expected  2.5%: r < 0.0382
Expected 16.0%: r < 0.0509
Expected 50.0%: r < 0.0708
Expected 84.0%: r < 0.0979
Expected 97.5%: r < 0.1305

Done in 0.01 min (cpu), 0.01 min (real)
------------------------------------------------>2
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
Computing results starting from observation (a-posteriori)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 1)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 546.5518
Expected  2.5%: r < 0.0392
Expected 16.0%: r < 0.0521
Expected 50.0%: r < 0.0723
Expected 84.0%: r < 0.1002
Expected 97.5%: r < 0.1334

Done in 0.01 min (cpu), 0.01 min (real)
------------------------------------------------>3
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
Computing results starting from observation (a-posteriori)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 1)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 546.5518
Expected  2.5%: r < 0.0400
Expected 16.0%: r < 0.0532
Expected 50.0%: r < 0.0737
Expected 84.0%: r < 0.1022
Expected 97.5%: r < 0.1361

Done in 0.01 min (cpu), 0.01 min (real)
------------------------------------------------>4
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
Computing results starting from observation (a-posteriori)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 1)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 546.5518
Expected  2.5%: r < 0.0429
Expected 16.0%: r < 0.0572
Expected 50.0%: r < 0.0796
Expected 84.0%: r < 0.1104
Expected 97.5%: r < 0.1464

Done in 0.01 min (cpu), 0.01 min (real)
------------------------------------------------>5
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
Computing results starting from observation (a-posteriori)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 1)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 546.5518
Expected  2.5%: r < 0.0435
Expected 16.0%: r < 0.0576
Expected 50.0%: r < 0.0796
Expected 84.0%: r < 0.1110
Expected 97.5%: r < 0.1473

Done in 0.01 min (cpu), 0.01 min (real)
------------------------------------------------>6
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
Computing results starting from observation (a-posteriori)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 1)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 546.5518
Expected  2.5%: r < 0.0512
Expected 16.0%: r < 0.0680
Expected 50.0%: r < 0.0942
Expected 84.0%: r < 0.1307
Expected 97.5%: r < 0.1739

Done in 0.01 min (cpu), 0.01 min (real)
------------------------------------------------>7
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
Computing results starting from observation (a-posteriori)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 1)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 546.5518
Expected  2.5%: r < 0.0554
Expected 16.0%: r < 0.0736
Expected 50.0%: r < 0.1021
Expected 84.0%: r < 0.1415
Expected 97.5%: r < 0.1883

Done in 0.01 min (cpu), 0.01 min (real)
------------------------------------------------>8
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
Computing results starting from observation (a-posteriori)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 1)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 102.0078
Expected  2.5%: r < 0.0737
Expected 16.0%: r < 0.0979
Expected 50.0%: r < 0.1357
Expected 84.0%: r < 0.1882
Expected 97.5%: r < 0.2505

Done in 0.01 min (cpu), 0.01 min (real)
------------------------------------------------>9
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
Computing results starting from observation (a-posteriori)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 1)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 102.0078
Expected  2.5%: r < 0.0745
Expected 16.0%: r < 0.0990
Expected 50.0%: r < 0.1372
Expected 84.0%: r < 0.1908
Expected 97.5%: r < 0.2536

Done in 0.00 min (cpu), 0.01 min (real)
------------------------------------------------>10
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
Computing results starting from observation (a-posteriori)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 1)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 0.1890
Expected  2.5%: r < 0.1026
Expected 16.0%: r < 0.1363
Expected 50.0%: r < 0.1890
Expected 84.0%: r < 0.2628
Expected 97.5%: r < 0.3493

Done in 0.01 min (cpu), 0.01 min (real)
