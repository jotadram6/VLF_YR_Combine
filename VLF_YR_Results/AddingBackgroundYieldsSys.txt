 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
Computing results starting from observation (a-posteriori)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 1)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 546.5518
Expected  2.5%: r < 0.0292
Expected 16.0%: r < 0.0455
Expected 50.0%: r < 0.0679
Expected 84.0%: r < 0.0979
Expected 97.5%: r < 0.1322

Done in 0.02 min (cpu), 0.02 min (real)
Compare to no systematic uncertainty on background estimation
 <<< Combine >>> 
>>> including systematics
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
Computing results starting from observation (a-posteriori)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 1)

 -- AsymptoticLimits ( CLs ) --
Observed Limit: r < 546.5518
Expected  2.5%: r < 0.0382
Expected 16.0%: r < 0.0509
Expected 50.0%: r < 0.0708
Expected 84.0%: r < 0.0979
Expected 97.5%: r < 0.1305

Done in 0.01 min (cpu), 0.01 min (real)
